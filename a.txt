import React, { useState, useEffect } from "react";
import { getItems } from "./utils/api";
import Search from "./components/Search";

const App = () => {
  const [items, setItems] = useState([]);
  useEffect(() => {
    getItems()
      .then((ans) => setItems(ans))
      .catch((error) => {
        console.log(error);
      });
    console.log("The value of items", items);
  }, []);
  return (
    <div>
      <Search />
    </div>
  );
};

export default App;
// import React from "react";
// import usersData from "./../utils/users.json";

// const Story = () => {
//   const users = usersData.users;
//   const userElements = users.map((user) => (
//     <div key={user.id} className="flex flex-col items-center">
//       <p className="text-center">{user.name}</p>
//       <img
//         src={user.img}
//         alt={`Image of ${user.name}`}
//         className="mt-2"
//         style={{ maxWidth: "100%", height: "auto" }}
//       />
//     </div>
//   ));

//   return <div className="text-white flex">{userElements}</div>;
// };

// export default Story;
import React from "react";
import usersData from "./../utils/users.json";

const Story = () => {
  const users = usersData.users;
  const userElements = users.map((user) => (
    <div key={user.id} className="flex flex-col items-center mr-4">
      <p className="text-center">{user.name}</p>
      <img
        src={user.img}
        alt={`Image of ${user.name}`}
        className="mt-2 rounded-full w-32 h-32 object-cover"
      />
    </div>
  ));

  return <div className="text-white flex overflow-x-auto">{userElements}</div>;
};

export default Story;


// import React from "react";
// import clothesData from "./../utils/clothes.json";

// const Main = () => {
//   return (
//     <div class="">
//       <div className="grid grid-col-3">
//         <div className="">{/* one image */}</div>
//         <div className="grid grid-cols-4">{/* 4 images here */}</div>
//       </div>
//       <div className="grid grid-[col-3">
//         <div className="">{/* one image */}</div>
//         <div className="grid grid-cols-4">{/* 4 images here */}</div>
//       </div>
//       <div className="grid grid-[20%_auto]">
//         <div className="">{/* one image */}</div>
//         <div className="grid grid-cols-4">{/* 4 images here */}</div>
//       </div>
//     </div>
//   );
// };

// export default Main;
import React from "react";
import clothesData from "./../utils/clothes.json";

const Main = () => {
  if (!clothesData || !clothesData.users || clothesData.users.length === 0) {
    return <div>No data available</div>;
  }

  const firstImage = clothesData.users[0];
  const nextFourImages = clothesData.users.slice(1, 5);
  const nextTwoImages = clothesData.users.slice(1, 2);

  return (
    <div className="p-4">
      <div className="grid grid-rows-2 grid-cols-4 gap-4">
        <div className="row-span-2 col-span-1">
          <img
            src={firstImage.img}
            alt={firstImage.name}
            className="w-full h-full object-cover"
          />
        </div>
        <div className="col-span-3 grid grid-cols-2 gap-4">
          {nextFourImages.map((item, index) => (
            <img
              key={index}
              src={item.img}
              alt={item.name}
              className="w-full h-full object-cover"
            />
          ))}
        </div>
      </div>
      <div className="grid grid-rows-2 grid-cols-4 gap-4">
        <div className="col-span-3 grid grid-cols-2 gap-4">
          {nextTwoImages.map((item, index) => (
            <img
              key={index}
              src={item.img}
              alt={item.name}
              className="w-full h-full object-cover"
            />
          ))}
        </div>
        <div className="row-span-2 col-span-1">
          <img
            src={firstImage.img}
            alt={firstImage.name}
            className="w-full h-full object-cover"
          />
        </div>
        <div className="col-span-3 grid grid-cols-2 gap-4">
          {nextTwoImages.map((item, index) => (
            <img
              key={index}
              src={item.img}
              alt={item.name}
              className="w-full h-full object-cover"
            />
          ))}
        </div>
      </div>
    </div>
  );
};

export default Main;




import React from "react";
import clothesData from "./../utils/clothes.json";

const Main = () => {
  if (!clothesData || !clothesData.users || clothesData.users.length === 0) {
    return <div>No data available</div>;
  }

  const itemsPerPage = 5;
  const totalItems = clothesData.users.length;
  const pages = Math.ceil(totalItems / itemsPerPage);

  return (
    <div className="p-4">
      {[...Array(pages)].map((_, pageIndex) => (
        <div key={pageIndex}>
          <div className="flex">
            <div className="row-span-2 col-span-1 gap-2">
              <img
                src={clothesData.users[pageIndex * itemsPerPage].img}
                alt={clothesData.users[pageIndex * itemsPerPage].name}
                className="w-full h-full object-cover"
              />
            </div>

            <div className="col-span-3 grid grid-cols-2">
              {clothesData.users
                .slice(
                  pageIndex * itemsPerPage + 1,
                  pageIndex * itemsPerPage + 1 + 4
                )
                .map((item, index) => (
                  <img
                    key={index}
                    src={item.img}
                    alt={item.name}
                    className="w-full h-full object-cover"
                  />
                ))}
            </div>
          </div>
          <div className="flex">
            <div className="col-span-3 grid grid-cols-2">
              {clothesData.users
                .slice(
                  pageIndex * itemsPerPage + 1 + 4,
                  pageIndex * itemsPerPage + 1 + 4 + 2
                )
                .map((item, index) => (
                  <img
                    key={index}
                    src={item.img}
                    alt={item.name}
                    className="w-full h-full object-cover"
                  />
                ))}
            </div>
            <div className="row-span-2 col-span-1 gap-2">
              <img
                src={clothesData.users[pageIndex * itemsPerPage].img}
                alt={clothesData.users[pageIndex * itemsPerPage].name}
                className="w-full h-full object-cover"
              />
            </div>
            <div className="col-span-3 grid grid-cols-2">
              {clothesData.users
                .slice(
                  pageIndex * itemsPerPage + 1 + 4,
                  pageIndex * itemsPerPage + 1 + 4 + 2
                )
                .map((item, index) => (
                  <img
                    key={index}
                    src={item.img}
                    alt={item.name}
                    className="w-full h-full object-cover"
                  />
                ))}
            </div>
          </div>
          {/* Display nextTwoImages */}

          {/* Display firstImage again */}
          {/* <div className="row-span-2 col-span-1">
            <img
              src={clothesData.users[pageIndex * itemsPerPage].img}
              alt={clothesData.users[pageIndex * itemsPerPage].name}
              className="w-full h-full object-cover"
            />
          </div> */}

          {/* Display nextTwoImages again */}
          {/* <div className="col-span-3 grid grid-cols-2 gap-4">
            {clothesData.users
              .slice(
                pageIndex * itemsPerPage + 1 + 4,
                pageIndex * itemsPerPage + 1 + 4 + 2
              )
              .map((item, index) => (
                <img
                  key={index}
                  src={item.img}
                  alt={item.name}
                  className="w-full h-full object-cover"
                />
              ))}
          </div> */}
        </div>
      ))}
    </div>
  );
};

export default Main;


**********works********
import React from "react";
import clothesData from "./../utils/clothes.json";

const Main = () => {
  if (!clothesData || !clothesData.users || clothesData.users.length === 0) {
    return <div>No data available</div>;
  }

  const itemsPerPage = 5;
  const totalItems = clothesData.users.length;
  const pages = Math.ceil(totalItems / itemsPerPage);

  return (
    <div className="p-4">
      {[...Array(pages)].map((_, pageIndex) => (
        <div key={pageIndex} className="grid grid-cols-4 gap-4">
          {/* First Image */}
          <div className="col-span-1">
            <img
              src={clothesData.users[pageIndex * itemsPerPage].img}
              alt={clothesData.users[pageIndex * itemsPerPage].name}
              className="w-full h-full object-cover"
            />
          </div>

          {/* NextFourImages */}
          <div className="col-span-3 grid grid-cols-2 gap-4">
            {clothesData.users
              .slice(
                pageIndex * itemsPerPage + 1,
                pageIndex * itemsPerPage + 1 + 4
              )
              .map((item, index) => (
                <img
                  key={index}
                  src={item.img}
                  alt={item.name}
                  className="w-full h-full object-cover"
                />
              ))}
          </div>
        </div>
      ))}
    </div>
  );
};

export default Main;












// import React from "react";
// import clothesData from "./../utils/clothes.json";

// const Main = () => {
//   if (!clothesData || !clothesData.users || clothesData.users.length === 0) {
//     return <div>No data available</div>;
//   }

//   const itemsPerPage = 5;
//   const totalItems = clothesData.users.length;
//   const pages = Math.ceil(totalItems / itemsPerPage);

//   return (
//     <div className="p-4">
//       {[...Array(pages)].map((_, pageIndex) => (
//         <div key={pageIndex} className="grid grid-cols-4 gap-4">
//           {/* First Image */}
//           <div className="col-span-1">
//             <img
//               src={clothesData.users[pageIndex * itemsPerPage].img}
//               alt={clothesData.users[pageIndex * itemsPerPage].name}
//               className="w-full h-full object-cover"
//             />
//           </div>

//           {/* NextFourImages */}
//           <div className="col-span-3 grid grid-cols-2 gap-4">
//             {clothesData.users
//               .slice(
//                 pageIndex * itemsPerPage + 1,
//                 pageIndex * itemsPerPage + 1 + 4
//               )
//               .map((item, index) => (
//                 <img
//                   key={index}
//                   src={item.img}
//                   alt={item.name}
//                   className="w-full h-full object-cover"
//                 />
//               ))}
//           </div>
//         </div>
//       ))}
//     </div>
//   );
// };

// export default Main;
import React from "react";
import clothesData from "./../utils/clothes.json";

const Main = () => {
  if (!clothesData || !clothesData.users || clothesData.users.length === 0) {
    return <div>No data available</div>;
  }

  const itemsPerPage = 10;
  const totalItems = clothesData.users.length;
  const pages = Math.ceil(totalItems / itemsPerPage);

  return (
    <>
      <div className="p-1">
        {[...Array(pages)].map((_, pageIndex) => (
          <div key={pageIndex} className="grid grid-cols-4 gap-4">
            <div className="col-span-1">
              <img
                src={clothesData.users[pageIndex * itemsPerPage].img}
                alt={clothesData.users[pageIndex * itemsPerPage].name}
                className="w-full h-full object-cover"
              />
            </div>
            <div className="col-span-3 grid grid-cols-2 gap-4">
              {clothesData.users
                .slice(
                  pageIndex * itemsPerPage + 1,
                  pageIndex * itemsPerPage + 1 + 4
                )
                .map((item, index) => (
                  <img
                    key={index}
                    src={item.img}
                    alt={item.name}
                    className="w-full h-full object-cover"
                  />
                ))}
            </div>
          </div>
        ))}
      </div>
      {/* <div className="p-1 ">
        {[...Array(pages)].map((_, pageIndex) => (
          <div key={pageIndex} className="flex">
            <div className="col-span-1">
              <img
                src={clothesData.users[pageIndex * itemsPerPage].img}
                alt={clothesData.users[pageIndex * itemsPerPage].name}
                className="w-full h-full object-cover"
              />
            </div>

            <div className="col-span-3">
              {clothesData.users
                .slice(
                  pageIndex * itemsPerPage + 1 + 4,
                  pageIndex * itemsPerPage + 1 + 4 + 2
                )
                .map((item, index) => (
                  <img
                    key={index}
                    src={item.img}
                    alt={item.name}
                    className="w-full h-full object-cover mb-4"
                  />
                ))}
            </div>
            <div className="col-span-1">
              <img
                src={clothesData.users[pageIndex * itemsPerPage].img}
                alt={clothesData.users[pageIndex * itemsPerPage].name}
                className="w-full h-full object-cover"
              />
            </div>
          </div>
        ))}
      </div> */}
      {/* <div className="p-1">
        {[...Array(pages)].map((_, pageIndex) => (
          <div key={pageIndex} className="flex">
            <div className="flex-grow flex items-stretch">
              <img
                src={clothesData.users[pageIndex * itemsPerPage].img}
                alt={clothesData.users[pageIndex * itemsPerPage].name}
                className="w-full h-full object-cover"
              />
            </div>

            <div className="flex-grow-3 ">
              {clothesData.users
                .slice(
                  pageIndex * itemsPerPage + 1 + 4,
                  pageIndex * itemsPerPage + 1 + 4 + 2
                )
                .map((item, index) => (
                  <div key={index} className="mb-4">
                    <img
                      src={item.img}
                      alt={item.name}
                      className="w-full h-full object-cover"
                    />
                  </div>
                ))}
            </div>

            <div className="flex-grow flex items-stretch">
              <img
                src={clothesData.users[pageIndex * itemsPerPage].img}
                alt={clothesData.users[pageIndex * itemsPerPage].name}
                className="w-full h-full object-cover"
              />
            </div>
          </div>
        ))}
      </div> */}
      <div className="">
        {[...Array(pages)].map((_, pageIndex) => (
          <div key={pageIndex} className="flex">
            {/* First Image */}
            <div className="flex-grow h-full">
              <img
                src={clothesData.users[pageIndex * itemsPerPage].img}
                alt={clothesData.users[pageIndex * itemsPerPage].name}
                className="w-full h-full object-cover"
              />
            </div>

            {/* NextTwoImages */}
            <div className="flex-grow-3 flex flex-col">
              {clothesData.users
                .slice(
                  pageIndex * itemsPerPage + 1 + 4,
                  pageIndex * itemsPerPage + 1 + 4 + 2
                )
                .map((item, index) => (
                  <div key={index} className="flex-grow mb-4">
                    <img
                      src={item.img}
                      alt={item.name}
                      className="w-full h-full object-cover"
                    />
                  </div>
                ))}
            </div>

            {/* Last Image */}
            <div className="flex-grow h-full">
              <img
                src={clothesData.users[pageIndex * itemsPerPage].img}
                alt={clothesData.users[pageIndex * itemsPerPage].name}
                className="w-full h-full object-cover"
              />
            </div>
          </div>
        ))}
      </div>
    </>
  );
};

export default Main;

.///App.jsx clothesData


// import React, { useState, useEffect } from "react";
// import { getItems } from "./utils/api";
// import "./App.css";
// import Story from "./components/Story";
// import Main from "./components/Main";
// import { BsGenderTrans } from "react-icons/bs";
// import { PiTShirt } from "react-icons/pi";
// import { HiOutlineArrowsUpDown } from "react-icons/hi2";
// import { IoFilterOutline } from "react-icons/io5";
// import { LiaShoppingBagSolid } from "react-icons/lia";
// import { GiLipstick } from "react-icons/gi";
// import users from "./utils/clothes.json";
// import Impdata from "./utils/users.json";

// const App = () => {
//   const [items, setItems] = useState([]);
//   const [selectedCategory, setSelectedCategory] = useState(1); // Default to "All"
//   const [activeButton, setActiveButton] = useState(null);
//   const [filteredData, setFilteredData] = useState([]);
//   const [activeFilter, setActiveFilter] = useState("All");
//   const [dropOpen, setDropOpen] = useState(false);

//   useEffect(() => {
//     getItems()
//       .then((ans) => setItems(ans))
//       .catch((error) => {
//         console.log(error);
//       });
//     console.log("The value of items", items);
//   }, []);

//   useEffect(() => {
//     applyFilters();
//   }, [selectedCategory, activeFilter]);

//   const applyFilters = () => {
//     let data = users.Impdata;

//     if (activeFilter !== "All") {
//       data = data.filter((user) => user.category === activeFilter);
//     }

//     setFilteredData(data);
//   };

//   const handleCategoryFilter = (item) => {
//     setSelectedCategory(item.id);
//     setActiveFilter(item.txt);
//   };

//   return (
//     <div>
//       <Story />
//       <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap p-4 ">
//         <div className="flex gap-3">
//           {btndata.map((btn) => (
//             <button
//               key={btn.id}
//               className={`flex items-center justify-center gap-4 p-2 m-1 rounded-md ${
//                 activeButton === btn.id
//                   ? "bg-white text-black"
//                   : "text-white border border-white"
//               }`}
//               onClick={() => openDropdown(btn.id)}
//             >
//               <span>{btn.icon}</span>
//               <span>{btn.txt}</span>
//             </button>
//           ))}
//         </div>
//       </div>
//       <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap bg-[#1A1A1A] ">
//         <div className="flex gap-3">
//           {data.map((item) => (
//             <button
//               key={item.id}
//               onClick={() => handleCategoryFilter(item)}
//               className={`flex items-center justify-center gap-2 p-3 bg-[#1A1A1A] rounded-lg h-[40px]${
//                 selectedCategory === item.id
//                   ? "  text-white underline  "
//                   : " text-gray-500"
//               }`}
//             >
//               {item.txt}
//             </button>
//           ))}
//         </div>
//       </div>
//       <Main data={filteredData} />
//     </div>
//   );
// };

// export default App;

// const btndata = [
//   {
//     id: 1,
//     txt: "Gender",
//     options: ["Male", "Female"],
//     icon: <BsGenderTrans />,
//   },
//   {
//     id: 2,
//     txt: "Collection",
//     options: ["C1", "C2"],
//     icon: <PiTShirt />,
//   },
//   {
//     id: 3,
//     txt: "Sort By",
//     options: [
//       "Recommended",
//       "Customer Rating",
//       "Price: High to Low",
//       "Price: Low to High",
//     ],
//     icon: <HiOutlineArrowsUpDown />,
//   },
//   {
//     id: 4,
//     txt: "Filter",
//     icon: <IoFilterOutline />,
//   },
//   {
//     id: 5,
//     txt: "Brand",
//     options: ["B1", "B2", "B2", "B2"],
//     icon: <LiaShoppingBagSolid />,
//   },
//   {
//     id: 6,
//     options: ["Lipstick", "Perfume", "Face", "Lips"],
//     txt: "Beauty",
//     icon: <GiLipstick />,
//   },
// ];
// const data = [
//   { id: 1, txt: "All" },
//   { id: 2, txt: "Tshirt" },
//   { id: 3, txt: "Joggers" },
//   { id: 4, txt: "Shirts" },
//   { id: 5, txt: "Pants" },
//   { id: 6, txt: "Cargos" },
//   { id: 7, txt: "Jacket" },
//   { id: 8, txt: "Blazers" },
//   { id: 9, txt: "Sarees" },
//   { id: 10, txt: "Suit" },
//   { id: 11, txt: "Coords" },
//   { id: 12, txt: "Shoes" },
//   { id: 13, txt: "Socks" },
//   { id: 14, txt: "Bags" },
//   { id: 15, txt: "Belt" },
// ];
// import React, { useState, useEffect } from "react";
// import { getItems } from "./utils/api";
// import "./App.css";
// import Story from "./components/Story";
// import Main from "./components/Main";
// import { BsGenderTrans } from "react-icons/bs";
// import { PiTShirt } from "react-icons/pi";
// import { HiOutlineArrowsUpDown } from "react-icons/hi2";
// import { IoFilterOutline } from "react-icons/io5";
// import { LiaShoppingBagSolid } from "react-icons/lia";
// import { GiLipstick } from "react-icons/gi";
// import users from "./utils/clothes.json";
// import Impdata from "./utils/users.json";

// const App = () => {
//   const [items, setItems] = useState([]);
//   const [selectedCategory, setSelectedCategory] = useState(1); // Default to "All"
//   const [activeButton, setActiveButton] = useState(null);
//   const [filteredData, setFilteredData] = useState([]);
//   const [activeFilter, setActiveFilter] = useState("All");
//   const [activeDropdown, setActiveDropdown] = useState(null);

//   useEffect(() => {
//     getItems()
//       .then((ans) => setItems(ans))
//       .catch((error) => {
//         console.log(error);
//       });
//     setFilteredData(users.users); // Adjusted for users.json
//     console.log("The value of items", items);
//   }, []);

//   useEffect(() => {
//     applyFilters();
//   }, [selectedCategory, activeFilter]);

//   const applyFilters = () => {
//     let data = users.Impdata;

//     if (activeFilter !== "All") {
//       data = data.filter((user) => user.category === activeFilter);
//     }

//     setFilteredData(data);
//   };

//   const handleClickBtn = (id) => {
//     setActiveButton(id);
//     setActiveDropdown(activeDropdown === id ? null : id); // Toggle dropdown
//   };

//   const handleCategoryFilter = (item) => {
//     setSelectedCategory(item.id);
//     setActiveFilter(item.txt);
//   };

//   const handleDropdownChange = (btnId, option) => {
//     console.log(`Selected option ${option} for button ${btnId}`);
//     // Handle the dropdown option change here as needed
//   };

//   return (
//     <div>
//       <Story />
//       <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap p-4 ">
//         <div className="flex gap-3">
//           {btndata.map((btn) => (
//             <div key={btn.id} className="relative">
//               <button
//                 className={`flex items-center justify-center gap-4 p-2 m-1 rounded-md ${
//                   activeButton === btn.id
//                     ? "bg-white text-black"
//                     : "text-white border border-white"
//                 }`}
//                 onClick={() => handleClickBtn(btn.id)}
//               >
//                 <span>{btn.txt}</span>
//                 <span>{btn.icon}</span>
//               </button>
//               {activeDropdown === btn.id && btn.options && (
//                 <div className="absolute bg-white text-black mt-2 rounded-md shadow-lg p-2">
//                   {btn.options.map((option, index) => (
//                     <div
//                       key={index}
//                       className="p-2 cursor-pointer hover:bg-gray-200"
//                       onClick={() => handleDropdownChange(btn.id, option)}
//                     >
//                       {option}
//                     </div>
//                   ))}
//                 </div>
//               )}
//             </div>
//           ))}
//         </div>
//       </div>
//       <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap bg-[#1A1A1A] ">
//         <div className="flex gap-3">
//           {data.map((item) => (
//             <button
//               key={item.id}
//               onClick={() => handleCategoryFilter(item)}
//               className={`flex items-center justify-center gap-2 p-3 bg-[#1A1A1A] rounded-lg h-[40px]${
//                 selectedCategory === item.id
//                   ? "  text-white underline  "
//                   : " text-gray-500"
//               }`}
//             >
//               {item.txt}
//             </button>
//           ))}
//         </div>
//       </div>
//       <Main data={filteredData} />
//     </div>
//   );
// };

// export default App;

// const btndata = [
//   {
//     id: 1,
//     txt: "Gender",
//     options: ["Male", "Female"],
//     icon: <BsGenderTrans />,
//   },
//   {
//     id: 2,
//     txt: "Collection",
//     options: ["C1", "C2"],
//     icon: <PiTShirt />,
//   },
//   {
//     id: 3,
//     txt: "Sort By",
//     options: [
//       "Recommended",
//       "Customer Rating",
//       "Price: High to Low",
//       "Price: Low to High",
//     ],
//     icon: <HiOutlineArrowsUpDown />,
//   },
//   {
//     id: 4,
//     txt: "Filter",
//     icon: <IoFilterOutline />,
//   },
//   {
//     id: 5,
//     txt: "Brand",
//     options: ["B1", "B2", "B2", "B2"],
//     icon: <LiaShoppingBagSolid />,
//   },
//   {
//     id: 6,
//     options: ["Lipstick", "Perfume", "Face", "Lips"],
//     txt: "Beauty",
//     icon: <GiLipstick />,
//   },
// ];

// const data = [
//   { id: 1, txt: "All" },
//   { id: 2, txt: "Tshirt" },
//   { id: 3, txt: "Joggers" },
//   { id: 4, txt: "Shirts" },
//   { id: 5, txt: "Pants" },
//   { id: 6, txt: "Cargos" },
//   { id: 7, txt: "Jacket" },
//   { id: 8, txt: "Blazers" },
//   { id: 9, txt: "Sarees" },
//   { id: 10, txt: "Suit" },
//   { id: 11, txt: "Coords" },
//   { id: 12, txt: "Shoes" },
//   { id: 13, txt: "Socks" },
//   { id: 14, txt: "Bags" },
//   { id: 15, txt: "Belt" },
// ];
// import React, { useState, useEffect } from "react";
// import { getItems } from "./utils/api";
// import "./App.css";
// import Story from "./components/Story";
// import Main from "./components/Main";
// import { BsGenderTrans } from "react-icons/bs";
// import { PiTShirt } from "react-icons/pi";
// // import { HiOutlineArrowsUpDown } from "react-icons/hi";
// import { IoFilterOutline } from "react-icons/io5";
// import { LiaShoppingBagSolid } from "react-icons/lia";
// import { GiLipstick } from "react-icons/gi";
// import users from "./utils/clothes.json";
// import Impdata from "./utils/users.json";

// const App = () => {
//   const [items, setItems] = useState([]);
//   const [selectedCategory, setSelectedCategory] = useState(1); // Default to "All"
//   const [activeButton, setActiveButton] = useState(null);
//   const [filteredData, setFilteredData] = useState([]);
//   const [activeFilter, setActiveFilter] = useState("All");
//   const [activeDropdown, setActiveDropdown] = useState(null);

//   useEffect(() => {
//     getItems()
//       .then((ans) => setItems(ans))
//       .catch((error) => {
//         console.log(error);
//       });
//     setFilteredData(users.users); // Adjusted for users.json
//     console.log("The value of items", items);
//   }, []);

//   useEffect(() => {
//     applyFilters();
//   }, [selectedCategory, activeFilter]);

//   const applyFilters = () => {
//     let data = users.Impdata;

//     if (activeFilter !== "All") {
//       data = data.filter((user) => user.category === activeFilter);
//     }

//     setFilteredData(data);
//   };

//   const handleClickBtn = (id) => {
//     setActiveButton(id);
//     setActiveDropdown(activeDropdown === id ? null : id); // Toggle dropdown
//   };

//   const handleCategoryFilter = (item) => {
//     setSelectedCategory(item.id);
//     setActiveFilter(item.txt);
//   };

//   const handleDropdownChange = (btnId, option) => {
//     console.log(`Selected option ${option} for button ${btnId}`);
//     // Handle the dropdown option change here as needed
//   };

//   return (
//     <div className="relative">
//       <Story />
//       <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap p-4 z-10">
//         <div className="flex gap-3">
//           {btndata.map((btn) => (
//             <div key={btn.id} className="relative">
//               <button
//                 className={`flex items-center justify-center gap-4 p-2 m-1 rounded-md ${
//                   activeButton === btn.id
//                     ? "bg-white text-black"
//                     : "text-white border border-white"
//                 }`}
//                 onClick={() => handleClickBtn(btn.id)}
//               >
//                 <span>{btn.icon}</span>
//                 <span>{btn.txt}</span>
//               </button>
//               {activeDropdown === btn.id && btn.options && (
//                 <div className="absolute z-10 rounded-3xl w-full">
//                   {" "}
//                   {btn.options.map((option, index) => (
//                     <div
//                       className="flex p-2 gap-5 bg-white"
//                       key={index}
//                       onClick={() => handleDropdownChange(btn.id, option)}
//                     >
//                       {option}
//                     </div>
//                   ))}
//                 </div>
//               )}
//             </div>
//           ))}
//         </div>
//       </div>
//       <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap bg-[#1A1A1A] relative z-0">
//         <div className="flex gap-3">
//           {data.map((item) => (
//             <button
//               key={item.id}
//               onClick={() => handleCategoryFilter(item)}
//               className={`flex items-center justify-center gap-2 p-3 bg-[#1A1A1A] rounded-lg h-[40px]${
//                 selectedCategory === item.id
//                   ? "  text-white underline  "
//                   : " text-gray-500"
//               }`}
//             >
//               {item.txt}
//             </button>
//           ))}
//         </div>
//       </div>
//       <Main data={filteredData} />
//     </div>
//   );
// };

// export default App;

// const btndata = [
//   {
//     id: 1,
//     txt: "Gender",
//     options: ["Male", "Female"],
//     icon: <BsGenderTrans />,
//   },
//   {
//     id: 2,
//     txt: "Collection",
//     options: ["C1", "C2"],
//     icon: <PiTShirt />,
//   },
//   {
//     id: 3,
//     txt: "Sort By",
//     options: [
//       "Recommended",
//       "Customer Rating",
//       "Price: High to Low",
//       "Price: Low to High",
//     ],
//     // icon: <HiOutlineArrowsUpDown />,
//     icon: <IoFilterOutline />,
//   },
//   {
//     id: 4,
//     txt: "Filter",
//     icon: <IoFilterOutline />,
//   },
//   {
//     id: 5,
//     txt: "Brand",
//     options: ["B1", "B2", "B2", "B2"],
//     icon: <LiaShoppingBagSolid />,
//   },
//   {
//     id: 6,
//     options: ["Lipstick", "Perfume", "Face", "Lips"],
//     txt: "Beauty",
//     icon: <GiLipstick />,
//   },
// ];

// const data = [
//   { id: 1, txt: "All" },
//   { id: 2, txt: "Tshirt" },
//   { id: 3, txt: "Joggers" },
//   { id: 4, txt: "Shirts" },
//   { id: 5, txt: "Pants" },
//   { id: 6, txt: "Cargos" },
//   { id: 7, txt: "Jacket" },
//   { id: 8, txt: "Blazers" },
//   { id: 9, txt: "Sarees" },
//   { id: 10, txt: "Suit" },
//   { id: 11, txt: "Coords" },
//   { id: 12, txt: "Shoes" },
//   { id: 13, txt: "Socks" },
//   { id: 14, txt: "Bags" },
//   { id: 15, txt: "Belt" },
// ];
import React, { useState, useEffect } from "react";
import { getItems } from "./utils/api";
import "./App.css";
import Story from "./components/Story";
import Main from "./components/Main";
import { BsGenderTrans } from "react-icons/bs";
import { PiTShirt } from "react-icons/pi";
// import { HiOutlineArrowsUpDown } from "react-icons/hi";
import { IoFilterOutline } from "react-icons/io5";
import { LiaShoppingBagSolid } from "react-icons/lia";
import { GiLipstick } from "react-icons/gi";
import users from "./utils/clothes.json";
import Impdata from "./utils/users.json";

const App = () => {
  const [items, setItems] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState(1); // Default to "All"
  const [activeButton, setActiveButton] = useState(null);
  const [filteredData, setFilteredData] = useState([]);
  const [activeFilter, setActiveFilter] = useState("All");
  const [activeDropdown, setActiveDropdown] = useState(null);

  useEffect(() => {
    getItems()
      .then((ans) => setItems(ans))
      .catch((error) => {
        console.log(error);
      });
    setFilteredData(users.users); // Adjusted for users.json
    console.log("The value of items", items);
  }, []);

  useEffect(() => {
    applyFilters();
  }, [selectedCategory, activeFilter]);

  const applyFilters = () => {
    let data = users.Impdata;

    if (activeFilter !== "All") {
      data = data.filter((user) => user.category === activeFilter);
    }

    setFilteredData(data);
  };

  const handleClickBtn = (id) => {
    setActiveButton(id);
    setActiveDropdown(activeDropdown === id ? null : id); // Toggle dropdown
  };

  const handleCategoryFilter = (item) => {
    setSelectedCategory(item.id);
    setActiveFilter(item.txt);
  };

  const handleDropdownChange = (btnId, option) => {
    console.log(`Selected option ${option} for button ${btnId}`);
    // Handle the dropdown option change here as needed
  };

  return (
    <div className="relative">
      <Story />
      <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap p-4 z-10">
        <div className="flex gap-3">
          {btndata.map((btn) => (
            <div key={btn.id} className="relative">
              <button
                className={`flex items-center justify-center gap-4 p-2 m-1 rounded-md ${
                  activeButton === btn.id
                    ? "bg-white text-black"
                    : "text-white border border-white"
                }`}
                onClick={() => handleClickBtn(btn.id)}
              >
                <span>{btn.icon}</span>
                <span>{btn.txt}</span>
              </button>
              <div className="">
                {activeDropdown === btn.id && btn.options && (
                  <div className="bg-white text-black mt-2 rounded-md shadow-lg p-2 z-100 w-full">
                    {btn.options.map((option, index) => (
                      <div
                        key={index}
                        className="p-2 cursor-pointer hover:bg-gray-200"
                        onClick={() => handleDropdownChange(btn.id, option)}
                      >
                        {option}
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
     
      <Main data={filteredData} />
    </div>
  );
};

export default App;

const btndata = [
  {
    id: 1,
    txt: "Gender",
    options: [
      { id: 1, label: "Male" },
      { id: 2, label: "Female" },
    ],
    icon: <BsGenderTrans />,
  },
  {
    id: 2,
    txt: "Collection",
    options: [
      { id: 1, label: "C1" },
      { id: 2, label: "C2" },
    ],
    icon: <PiTShirt />,
  },
  {
    id: 3,
    txt: "Sort By",
    options: [
      { id: 1, label: "Recommended" },
      { id: 2, label: "Customer Rating" },
      { id: 3, label: "Price: High to Low" },
      { id: 4, label: "Price: Low to High" },
    ],
    icon: <IoFilterOutline />,
  },
  {
    id: 4,
    txt: "Filter",
    icon: <IoFilterOutline />,
  },
  {
    id: 5,
    txt: "Brand",
    options: [
      { id: 1, label: "B1" },
      { id: 2, label: "B2" },
      { id: 3, label: "B2" },
      { id: 4, label: "B2" },
    ],
    icon: <LiaShoppingBagSolid />,
  },
  {
    id: 6,
    txt: "Beauty",
    options: [
      { id: 1, label: "Lipstick" },
      { id: 2, label: "Perfume" },
      { id: 3, label: "Face" },
      { id: 4, label: "Lips" },
    ],
    icon: <GiLipstick />,
  },
];

const data = [
  { id: 1, txt: "All" },
  { id: 2, txt: "Tshirt" },
  { id: 3, txt: "Joggers" },
  { id: 4, txt: "Shirts" },
  { id: 5, txt: "Pants" },
  { id: 6, txt: "Cargos" },
  { id: 7, txt: "Jacket" },
  { id: 8, txt: "Blazers" },
  { id: 9, txt: "Sarees" },
  { id: 10, txt: "Suit" },
  { id: 11, txt: "Coords" },
  { id: 12, txt: "Shoes" },
  { id: 13, txt: "Socks" },
  { id: 14, txt: "Bags" },
  { id: 15, txt: "Belt" },
];
// // import React, { useState, useEffect } from "react";
// // import { getItems } from "./utils/api";
// // import "./App.css";
// // import Story from "./components/Story";
// // import Main from "./components/Main";
// // import { BsGenderTrans } from "react-icons/bs";
// // import { PiTShirt } from "react-icons/pi";
// // import { IoFilterOutline } from "react-icons/io5";
// // import { LiaShoppingBagSolid } from "react-icons/lia";
// // import { GiLipstick } from "react-icons/gi";
// // import users from "./utils/clothes.json";
// // import Impdata from "./utils/users.json";

// // const App = () => {
// //   const [items, setItems] = useState([]);
// //   const [selectedCategory, setSelectedCategory] = useState(1); // Default to "All"
// //   const [activeButton, setActiveButton] = useState(null);
// //   const [filteredData, setFilteredData] = useState([]);
// //   const [activeFilter, setActiveFilter] = useState("All");
// //   const [activeDropdown, setActiveDropdown] = useState(null);
// //   const [selectedOptions, setSelectedOptions] = useState({});

// //   useEffect(() => {
// //     getItems()
// //       .then((ans) => setItems(ans))
// //       .catch((error) => {
// //         console.log(error);
// //       });
// //     setFilteredData(users.users); // Adjusted for users.json
// //   }, []);

// //   useEffect(() => {
// //     applyFilters();
// //   }, [selectedCategory, activeFilter]);

// //   const applyFilters = () => {
// //     let data = users.Impdata;

// //     if (activeFilter !== "All") {
// //       data = data.filter((user) => user.category === activeFilter);
// //     }

// //     setFilteredData(data);
// //   };

// //   const handleClickBtn = (id) => {
// //     setActiveButton(id);
// //     setActiveDropdown(activeDropdown === id ? null : id); // Toggle dropdown
// //   };

// //   const handleCategoryFilter = (item) => {
// //     setSelectedCategory(item.id);
// //     setActiveFilter(item.txt);
// //   };

// //   const handleDropdownChange = (btnId, option) => {
// //     console.log(`Selected option ${option.name} for button ${btnId}`);
// //     const newSelectedOptions = {
// //       ...selectedOptions,
// //       [btnId]: selectedOptions[btnId]
// //         ? [...selectedOptions[btnId], option.name]
// //         : [option.name], // Store selected options by button id
// //     };
// //     setSelectedOptions(newSelectedOptions);
// //   };

// //   const removeOption = (btnId, option) => {
// //     const currentOptions = selectedOptions[btnId];
// //     const updatedOptions = currentOptions.filter((opt) => opt !== option);
// //     setSelectedOptions({
// //       ...selectedOptions,
// //       [btnId]: updatedOptions.length > 0 ? updatedOptions : null,
// //     });
// //   };

// //   return (
// //     <div className="">
// //       <Story />
// //       <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap p-4 z-10 h-screen">
// //         <div className="flex gap-3">
// //           {btndata.map((btn) => (
// //             <div key={btn.id} className="relative">
// //               <button
// //                 className={`flex items-center justify-center gap-4 p-2 m-1 rounded-md ${
// //                   activeButton === btn.id
// //                     ? "bg-white text-black"
// //                     : "text-white border border-white"
// //                 }`}
// //                 onClick={() => handleClickBtn(btn.id)}
// //               >
// //                 <span>{btn.icon}</span>
// //                 <span>{btn.txt}</span>
// //                 {selectedOptions[btn.id] && (
// //                   <span className="ml-2 text-gray-500">
// //                     {selectedOptions[btn.id].join(", ")}
// //                   </span>
// //                 )}
// //               </button>
// //               {activeDropdown === btn.id && btn.options && (
// //                 <div className="absolute left-0 bg-white text-black mt-2 rounded-md shadow-lg p-2 z-50 w-full">
// //                   {btn.options.map((option) => (
// //                     <div
// //                       key={option.id} // Assuming 'id' is unique
// //                       className={`p-2 cursor-pointer hover:bg-gray-200 ${
// //                         selectedOptions[btn.id] &&
// //                         selectedOptions[btn.id].includes(option.name)
// //                           ? "bg-gray-200"
// //                           : ""
// //                       }`}
// //                       onClick={() =>
// //                         selectedOptions[btn.id] &&
// //                         selectedOptions[btn.id].includes(option.name)
// //                           ? removeOption(btn.id, option.name)
// //                           : handleDropdownChange(btn.id, option)
// //                       }
// //                     >
// //                       {option.name}
// //                     </div>
// //                   ))}
// //                 </div>
// //               )}
// //             </div>
// //           ))}
// //         </div>
// //       </div>
// //     </div>
// //   );
// // };

// // export default App;

// // const btndata = [
// //   {
// //     id: 1,
// //     txt: "Gender",
// //     options: [
// //       { id: "M", name: "Male" },
// //       { id: "F", name: "Female" },
// //     ],
// //     icon: <BsGenderTrans />,
// //   },
// //   {
// //     id: 2,
// //     txt: "Collection",
// //     options: [
// //       { id: "C1", name: "Collection 1" },
// //       { id: "C2", name: "Collection 2" },
// //     ],
// //     icon: <PiTShirt />,
// //   },
// //   {
// //     id: 3,
// //     txt: "Sort By",
// //     options: [
// //       { id: "Rec", name: "Recommended" },
// //       { id: "CustRating", name: "Customer Rating" },
// //       { id: "PriceHigh", name: "Price: High to Low" },
// //       { id: "PriceLow", name: "Price: Low to High" },
// //     ],
// //     icon: <IoFilterOutline />,
// //   },
// //   {
// //     id: 4,
// //     txt: "Filter",
// //     icon: <IoFilterOutline />,
// //   },
// //   {
// //     id: 5,
// //     txt: "Brand",
// //     options: [
// //       { id: "B1", name: "Brand 1" },
// //       { id: "B2", name: "Brand 2" },
// //       { id: "B3", name: "Brand 3" },
// //     ],
// //     icon: <LiaShoppingBagSolid />,
// //   },
// //   {
// //     id: 6,
// //     txt: "Beauty",
// //     options: [
// //       { id: "Lipstick", name: "Lipstick" },
// //       { id: "Perfume", name: "Perfume" },
// //       { id: "Face", name: "Face" },
// //       { id: "Lips", name: "Lips" },
// //     ],
// //     icon: <GiLipstick />,
// //   },
// // ];
// import React, { useState, useEffect } from "react";
// import { getItems } from "./utils/api";
// import "./App.css";
// import Story from "./components/Story";
// import Main from "./components/Main";
// import { BsGenderTrans } from "react-icons/bs";
// import { PiTShirt } from "react-icons/pi";
// import { IoFilterOutline } from "react-icons/io5";
// import { LiaShoppingBagSolid } from "react-icons/lia";
// import { GiLipstick } from "react-icons/gi";
// import users from "./utils/clothes.json";
// import Impdata from "./utils/users.json";

// const App = () => {
//   const [items, setItems] = useState([]);
//   const [selectedCategory, setSelectedCategory] = useState(1); // Default to "All"
//   const [activeButton, setActiveButton] = useState(null);
//   const [filteredData, setFilteredData] = useState([]);
//   const [activeFilter, setActiveFilter] = useState("All");
//   const [activeDropdown, setActiveDropdown] = useState(null);
//   const [selectedOptions, setSelectedOptions] = useState({});

//   useEffect(() => {
//     getItems()
//       .then((ans) => setItems(ans))
//       .catch((error) => {
//         console.log(error);
//       });
//     setFilteredData(users.users); // Adjusted for users.json
//   }, []);

//   useEffect(() => {
//     applyFilters();
//   }, [selectedCategory, activeFilter]);

//   const applyFilters = () => {
//     let data = users.Impdata;

//     if (activeFilter !== "All") {
//       data = data.filter((user) => user.category === activeFilter);
//     }

//     setFilteredData(data);
//   };

//   const handleClickBtn = (id) => {
//     setActiveButton(id);
//     setActiveDropdown(activeDropdown === id ? null : id); // Toggle dropdown
//   };

//   const handleCategoryFilter = (item) => {
//     setSelectedCategory(item.id);
//     setActiveFilter(item.txt);
//   };

//   const handleDropdownChange = (btnId, option) => {
//     console.log(`Selected option ${option.name} for button ${btnId}`);
//     const newSelectedOptions = {
//       ...selectedOptions,
//       [btnId]: selectedOptions[btnId]
//         ? [...selectedOptions[btnId], option.name]
//         : [option.name], // Store selected options by button id
//     };
//     setSelectedOptions(newSelectedOptions);
//   };

//   const removeOption = (btnId, option) => {
//     const currentOptions = selectedOptions[btnId];
//     const updatedOptions = currentOptions.filter((opt) => opt !== option);
//     setSelectedOptions({
//       ...selectedOptions,
//       [btnId]: updatedOptions.length > 0 ? updatedOptions : null,
//     });
//   };

//   return (
//     <div className="">
//       <Story />
//       <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap p-4 z-10">
//         <div className="flex gap-3">
//           {btndata.map((btn) => (
//             <div key={btn.id} className="relative">
//               <button
//                 className={`flex items-center justify-center gap-4 p-2 m-1 rounded-md ${
//                   activeButton === btn.id
//                     ? "bg-white text-black"
//                     : "text-white border border-white"
//                 }`}
//                 onClick={() => handleClickBtn(btn.id)}
//               >
//                 <span>{btn.icon}</span>
//                 <span>{btn.txt}</span>
//                 {selectedOptions[btn.id] && (
//                   <div className="flex flex-wrap mt-1">
//                     {selectedOptions[btn.id].map((option) => (
//                       <div
//                         key={option}
//                         className="flex items-center bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2"
//                       >
//                         {option}
//                         <button
//                           className="ml-2 text-gray-500"
//                           onClick={() => removeOption(btn.id, option)}
//                         >
//                           &#10005;
//                         </button>
//                       </div>
//                     ))}
//                   </div>
//                 )}
//               </button>
//               {activeDropdown === btn.id && btn.options && (
//                 <div className="absolute left-0 bg-white text-black mt-2 rounded-md shadow-lg p-2 z-50 w-full">
//                   {btn.options.map((option) => (
//                     <div
//                       key={option.id} // Assuming 'id' is unique
//                       className={`p-2 cursor-pointer hover:bg-gray-200 ${
//                         selectedOptions[btn.id] &&
//                         selectedOptions[btn.id].includes(option.name)
//                           ? "bg-gray-200"
//                           : ""
//                       }`}
//                       onClick={() =>
//                         selectedOptions[btn.id] &&
//                         selectedOptions[btn.id].includes(option.name)
//                           ? removeOption(btn.id, option.name)
//                           : handleDropdownChange(btn.id, option)
//                       }
//                     >
//                       {option.name}
//                     </div>
//                   ))}
//                 </div>
//               )}
//             </div>
//           ))}
//         </div>
//       </div>
//       <Main data={filteredData} />
//     </div>
//   );
// };

// export default App;

// const btndata = [
//   {
//     id: 1,
//     txt: "Gender",
//     options: [
//       { id: "M", name: "Male" },
//       { id: "F", name: "Female" },
//     ],
//     icon: <BsGenderTrans />,
//   },
//   {
//     id: 2,
//     txt: "Collection",
//     options: [
//       { id: "C1", name: "Collection 1" },
//       { id: "C2", name: "Collection 2" },
//     ],
//     icon: <PiTShirt />,
//   },
//   {
//     id: 3,
//     txt: "Sort By",
//     options: [
//       { id: "Rec", name: "Recommended" },
//       { id: "CustRating", name: "Customer Rating" },
//       { id: "PriceHigh", name: "Price: High to Low" },
//       { id: "PriceLow", name: "Price: Low to High" },
//     ],
//     icon: <IoFilterOutline />,
//   },
//   {
//     id: 4,
//     txt: "Filter",
//     icon: <IoFilterOutline />,
//   },
//   {
//     id: 5,
//     txt: "Brand",
//     options: [
//       { id: "B1", name: "Brand 1" },
//       { id: "B2", name: "Brand 2" },
//       { id: "B3", name: "Brand 3" },
//     ],
//     icon: <LiaShoppingBagSolid />,
//   },
//   {
//     id: 6,
//     txt: "Beauty",
//     options: [
//       { id: "Lipstick", name: "Lipstick" },
//       { id: "Perfume", name: "Perfume" },
//       { id: "Face", name: "Face" },
//       { id: "Lips", name: "Lips" },
//     ],
//     icon: <GiLipstick />,
//   },
// ];
// import React, { useState, useEffect } from "react";
// import { getItems } from "./utils/api";
// import "./App.css";
// import Story from "./components/Story";
// import Main from "./components/Main";
// import { BsGenderTrans } from "react-icons/bs";
// import { PiTShirt } from "react-icons/pi";
// import { IoFilterOutline } from "react-icons/io5";
// import { LiaShoppingBagSolid } from "react-icons/lia";
// import { GiLipstick } from "react-icons/gi";
// import users from "./utils/clothes.json";
// import Impdata from "./utils/users.json";

// const App = () => {
//   const [items, setItems] = useState([]);
//   const [selectedCategory, setSelectedCategory] = useState(1); // Default to "All"
//   const [activeButton, setActiveButton] = useState(null);
//   const [filteredData, setFilteredData] = useState([]);
//   const [activeFilter, setActiveFilter] = useState("All");
//   const [activeDropdown, setActiveDropdown] = useState(null);
//   const [selectedOptions, setSelectedOptions] = useState({});

//   useEffect(() => {
//     getItems()
//       .then((ans) => setItems(ans))
//       .catch((error) => {
//         console.log(error);
//       });
//     setFilteredData(users.users); // Adjusted for users.json
//   }, []);

//   useEffect(() => {
//     applyFilters();
//   }, [selectedCategory, activeFilter]);

//   const applyFilters = () => {
//     let data = users.Impdata;

//     if (activeFilter !== "All") {
//       data = data.filter((user) => user.category === activeFilter);
//     }

//     setFilteredData(data);
//   };

//   const handleClickBtn = (id) => {
//     setActiveButton(id);
//     setActiveDropdown(activeDropdown === id ? null : id); // Toggle dropdown
//   };

//   const handleCategoryFilter = (item) => {
//     setSelectedCategory(item.id);
//     setActiveFilter(item.txt);
//   };

//   const handleDropdownChange = (btnId, option) => {
//     console.log(`Selected option ${option.name} for button ${btnId}`);
//     const newSelectedOptions = {
//       ...selectedOptions,
//       [btnId]: selectedOptions[btnId]
//         ? [...selectedOptions[btnId], option.name]
//         : [option.name], // Store selected options by button id
//     };
//     setSelectedOptions(newSelectedOptions);
//   };

//   const removeOption = (btnId, option) => {
//     const currentOptions = selectedOptions[btnId];
//     const updatedOptions = currentOptions.filter((opt) => opt !== option);
//     setSelectedOptions({
//       ...selectedOptions,
//       [btnId]: updatedOptions.length > 0 ? updatedOptions : null,
//     });
//   };

//   return (
//     <div className="">
//       <Story />
//       <div className="wrapper overflow-x-auto overflow-y-auto whitespace-nowrap p-4 z-10 h-screen">
//         <div className="flex gap-3">
//           {btndata.map((btn) => (
//             <div key={btn.id} className="relative">
//               <button
//                 className={`flex items-center justify-center gap-4 p-2 m-1 rounded-md ${
//                   activeButton === btn.id
//                     ? "bg-white text-black"
//                     : "text-white border border-white"
//                 }`}
//                 onClick={() => handleClickBtn(btn.id)}
//               >
//                 <span>{btn.icon}</span>
//                 <span>{btn.txt}</span>
//                 {selectedOptions[btn.id] && (
//                   <div className="flex flex-wrap items-center ml-2">
//                     {selectedOptions[btn.id].map((option) => (
//                       <div
//                         key={option}
//                         className="flex items-center bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2"
//                       >
//                         {option}
//                         <button
//                           className="ml-2 text-gray-500"
//                           onClick={() => removeOption(btn.id, option)}
//                         >
//                           &#10005;
//                         </button>
//                       </div>
//                     ))}
//                   </div>
//                 )}
//               </button>
//               {activeDropdown === btn.id && btn.options && (
//                 <div className="absolute left-0 bg-white text-black mt-2 rounded-md shadow-lg p-2 z-50 w-full">
//                   {btn.options.map((option) => (
//                     <div
//                       key={option.id} // Assuming 'id' is unique
//                       className={`p-2 cursor-pointer hover:bg-gray-200 ${
//                         selectedOptions[btn.id] &&
//                         selectedOptions[btn.id].includes(option.name)
//                           ? "bg-gray-200"
//                           : ""
//                       }`}
//                       onClick={() =>
//                         selectedOptions[btn.id] &&
//                         selectedOptions[btn.id].includes(option.name)
//                           ? removeOption(btn.id, option.name)
//                           : handleDropdownChange(btn.id, option)
//                       }
//                     >
//                       {option.name}
//                     </div>
//                   ))}
//                 </div>
//               )}
//             </div>
//           ))}
//         </div>
//       </div>
//     </div>
//   );
// };

// export default App;

// const btndata = [
//   {
//     id: 1,
//     txt: "Gender",
//     options: [
//       { id: "M", name: "Male" },
//       { id: "F", name: "Female" },
//     ],
//     icon: <BsGenderTrans />,
//   },
//   {
//     id: 2,
//     txt: "Collection",
//     options: [
//       { id: "C1", name: "Collection 1" },
//       { id: "C2", name: "Collection 2" },
//     ],
//     icon: <PiTShirt />,
//   },
//   {
//     id: 3,
//     txt: "Sort By",
//     options: [
//       { id: "Rec", name: "Recommended" },
//       { id: "CustRating", name: "Customer Rating" },
//       { id: "PriceHigh", name: "Price: High to Low" },
//       { id: "PriceLow", name: "Price: Low to High" },
//     ],
//     icon: <IoFilterOutline />,
//   },
//   {
//     id: 4,
//     txt: "Filter",
//     icon: <IoFilterOutline />,
//   },
//   {
//     id: 5,
//     txt: "Brand",
//     options: [
//       { id: "B1", name: "Brand 1" },
//       { id: "B2", name: "Brand 2" },
//       { id: "B3", name: "Brand 3" },
//     ],
//     icon: <LiaShoppingBagSolid />,
//   },
//   {
//     id: 6,
//     txt: "Beauty",
//     options: [
//       { id: "Lipstick", name: "Lipstick" },
//       { id: "Perfume", name: "Perfume" },
//       { id: "Face", name: "Face" },
//       { id: "Lips", name: "Lips" },
//     ],
//     icon: <GiLipstick />,
//   },
// ];
